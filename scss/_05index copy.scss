// 讀取 變數 檔案 ；@use 區域性；一次性；規則 檔案要另給名稱；基於檔案的安全性；要放置在所有語法最上層
@use '_01variable/variable' as V;
@use '_02mixin/_01media' as R;
@use '_02mixin/02images' as Img;
@use '_02mixin/03Rounded' as Ro;
@use '_02mixin/04Jmixin' as JM;
// 滿版設計 section id="bivouac"；設定寬 100 高 100 背景顏色
#bivouac {
    width: V.$Num10 * 10 * V.$Per;
    height: V.$Num10 * 10 * V.$Per;
}
// 子選擇器（指定階層 > ；同層之中不能有相同的標籤，若有相同需設定 id or class）；子孫選擇器（跨標籤讀取 利用「空格」；不論哪一層物件，需設定 id or class）
// 巢狀寫法
// menu（背景圖片取代文字呈現） 與 Logo（水平垂直置中） 要同一列；聯絡資訊要各別一列（文字的寬度為 90%；文字靠右對齊，文字的顏色 咖啡色；隱藏項目符號

// #{} 格式，會將「變數設定為字串」的內容轉譯為「選擇器」或是「屬性名稱」
@include R.Rwd(xs) {
    #Banner {
        @include JM.WH();
        position: absolute;
        z-index: V.$ZNumNeg;
        position: fixed;
        top: 0;
        // background-color: wheat;

        ul {
            @include JM.WH();
            position: relative;

            li {
                @include JM.WH();
                @include JM.BannerRound;
                // 動畫格式預設值
                opacity: 0;
                filter: alpha(opacity=0);
                -webkit-filter: alpha(opacity=0);
                position: absolute;

                span{
                    @include JM.WH();
                    display: block;
                    background-color: rgba(0, 0, 0, 0.45)
                }
            }
            .Images1 {
                @include Img.Images(center, cover, photo, "001.jpg");
            }
            .Images2 {
                @include Img.Images(center, cover, photo, "002.jpg");
            }
            .Images3 {
                @include Img.Images(center, cover, photo, "003.jpg");
            }
            .Images4 {
                @include Img.Images(center, cover, photo, "004.jpg");
            }
            .Images5 {
                @include Img.Images(center, cover, photo, "005.jpg");
            }
        }
        @include JM.BannerDelay;
    }
    $HeaderHeight: V.$Num10 * 5px;
    $FooterHeight: V.$Num10 * 12px;
    header {
        width: V.$Num10 * 10%;
        height: $HeaderHeight;
        // 顯示方法：彈性佈局（智能對齊）；在需要排版物件的父框架設定；會將所有的子物排成一列
        display: flex;
        // 換行，將子物件設定為 兩列；預設值會自動判斷 子物件 的寬度（均分）；要設定 子物件 的寬度才會有做用
        flex-wrap: wrap;
        list-style-type: none;
        // 停佇
        position: fixed;
        top: 0;

        position: absolute;
        z-index: V.$ZNum5;
        background-color: V.$Blue-Green;

        #menu {
            width: V.$Num10 * 1.5%;
            // 文字顏色
            color: rebeccapurple;
            // 背景圖片取代文字顯示，背景圖片的對齊，可以輕易達到 水平垂直置中 的排列方式
            // 1. 設定背景圖片連結 2.背景圖片不重複顯示 3.背景圖片的對齊（定位點 X Y - 水平垂直置中）
            // 4. 位移文字（首行縮排 - 單行文字 或者 段落文字的第一行） 5.圖片尺寸設定（預設值：自動）
            // background-image: url(../images/icons/list.svg);
            // background-repeat: no-repeat;
            // background-position: center;
            // auto（預設值：自動） cover（滿版覆蓋框架尺寸） contain（滿版留白）| 各別設 x y 的值（例如：background-size: 50% 30%;）| 單位：px %
            // background-size: contain;
            // text-indent: -9999px;
            @include Img.Images(center, contain, icons, "list.svg");
            // background-color: blue;
            // #{} 格式，會將「變數設定為字串」的內容轉譯為「選擇器」或是「屬性名稱」

            // @include R.Rwd(md) {
            //     width: V.$Num10 * 1.3%;
            //     background-color: rgb(140, 0, 255);
            // }
        }

        > h1 {
            // h1（2em 32px） h2（1.5em 24px） h3（1em 16px）
            width: V.$Num10 * 8.5%;
            height: 50px;
            text-align: center;
            // background-color: red;
            li {
                margin-top: calc( (50px - 32px) / 2 );
            }
        }

        .ConnBox {
            display: none;
        }
    }

    #PhoneMenu {
        width: V.$Num10 * 10%;
        height: V.$Num10 * 10%;
        // 重（層）疊順序 設定值 auto（自動） | 整數（數字越大，重（層）疊順序越上層
        z-index: V.$ZNum99;
        // 需配合定位點：絕對值
        position: absolute;
        // background-color: white;
        display: none;

        // 父框架設置定位點 relative，子物件設置定位點 absolute，系統會將「body」的原點位置，重新訂給「父框架」使用

        $MenuHeaderH: V.$Num10 * 15;

        #menuheader {
            width: V.$Num10 * 10%;
            height: calc( $MenuHeaderH * 1px );
            // position: relative;
            // 彈性佈局
            display: flex;
            // 定位點：停佇
            position: fixed;
            top: 0;
            // 水平置中
            justify-content: center;
            // 垂直置中
            align-items: center;
            background-color: V.$Blue-Green;
            display: none;

            #close {
                // 顯示方式：inline-block（行內區塊層級）；以內容的寬度為主
                display: inline-block;
                // 文字尺寸替代高度
                font-size: 1.5rem;
                // 內間距（留白）
                padding: 10px;
                // 文字變化 uppercase（全部大寫） lowercase（全部小寫） capitalize（單字的第一個字母大寫
                text-transform: uppercase;
                background-color: rebeccapurple;
                
                //small-caps 小型大寫字，會比原本的大寫還要再小再扁一些
                // font-variant: small-caps; 

                // 定位點
                position: absolute;
                top: 0;
                right: 0;

                // 若與 display: inline-block 一起用，系統將會視為 display:block
                // float:right;

                a {
                    color: rgb(255, 255, 255);
                    // 取消文字裝飾（底線）
                    text-decoration: none;
                }
            }
            > h1 {
                font-size: 2rem;
                // position: absolute;
                // top: 50%;
                // left: 50%;
                // margin-left: -25%;
                // margin-top: -6%;
            }
        }

        #menunav {
            width: V.$Num10 * 8%;
            // height: V.$Num10 * 6.8%;
            // 上邊界
            // margin-top: calc( ($MenuHeaderH + 10) * 1px );

            .NH {
                height: 70px;
            }

            h2 {
                padding: 2.5px 0;
                border-bottom: {
                    color: V.$Blue-Green;
                    width: 4px;
                    style: double;
                };
            }
            .Conn {
                margin-top: 20px;
            }
            
        }
        
        $MenuIconWidth: V.$Num10 * 8.5%;
        #menuicon {
            width: $MenuIconWidth;
            height: V.$Num10 * 6px;

            // 框線 border
            border-top: {
                color: V.$Blue-Green;
                width: 2px;
                // solid 實線；double 雙線；dashed 虛線；dotted 圓點虛線
                // inset 內陰影；outset 外陰影；groove 浮凸 ；ridge 內凹
                style: solid;
            };
            display: flex;
            justify-content: center;
            align-items: center;
            // 定位點：絕對值
            position: absolute;
            z-index: V.$ZNum10;
            // 定位點：停佇
            position: fixed;
            bottom: 0;

            margin-left: calc( ( 100% - $MenuIconWidth ) / 2 );
            // background-color: white;
        }
    }

    // 選單共用區
    .Items {
        display: flex;
        flex-wrap: wrap;
        li {
            width: V.$Num10 * 10%;
            // 首行縮排
            text-indent: 8%;
            font-size: 1rem * 1.2;
        }
        .One {
            order: 2;
        }
        .Two {
            order: 6;
        }
        .Three {
            order: 3;
        }
        .Four {
            order: 4;
        }
        .Five {
            order: 5;
        }   
        .Six {
            order: 1;
        }
    }

    #main {
        width: V.$Num10 * 8.5%;

        // header的高 - nav>li 的 margin-top
        margin-top: $HeaderHeight + 15px;
        .Items {
            // li {
            //     width: V.$Num10 * 10%;
            //     height: 170px;
            //     margin: 15px 0;
            //     background-color: rgb(146, 61, 61);
            //     //圓角矩形
            //     @include Ro.Rounded( 15px );
            //     font-size: 1rem * 1.2;
            //     text-indent: 0;

            //     // 文字水平垂直置中
            //     display: flex;
            //     justify-content: center;
            //     align-items: center;
            // }

            // .One {
            //     @include Img.Images(center, cover, btn, "002.jpg");
                
            //     span {
            //         width: V.$Num10 * 10%;
            //         height: 170px;
            //         background-color: rgba(146, 61, 61, 0.45);
            //     }
            // }

            // .Six {
            //     // 定位點：相對值
            //     position: relative;
            //     @include Img.Images(center, cover, btn, "001.jpg");

            //     // 行內範圍，不會換行
            //     span {
            //         width: V.$Num10 * 10%;
            //         display: inline-block;
            //         color: white;
            //         // 文字尺寸取代高度
            //         font-size: 1rem * 1.3;
            //         padding: 5px 0;
            //         text-align: center;
            //         // 定位點：絕對值
            //         position: absolute;
            //         // 靠下對齊
            //         bottom: 0;
            //         // rgba a=透明度 0-1（接受到小數點第二）
            //         background-color: rgba(146, 61, 61, 0.75);
            //         @include Ro.LRBottom(15px, 15px);
                    
            //     }
            // }
        }
        .Null {
            height: 135px;
        }
    }

    footer {
        width: V.$Num10 * 10%;
        height: $FooterHeight;
        // 定位點：停佇
        position: fixed;
        bottom: 0;
        font-size: 0.9rem;
        background-color: V.$Blue-Green;
    }

}

@include R.Rwd(sm) {
    header {    
        #menu {
            width: V.$Num10 * 1.3%;
            // background-color: rgb(255, 208, 0);
        }

        h1 {
            width: V.$Num10 * 8.7%;

            // @include R.Rwd(sm) {
            //     width: V.$Num10 * 8.7%;
            //     background-color: rgb(143, 188, 182);
            // }
        }

        ul {
            width: V.$Num10 * 10%;
        }
    }
}

@include R.Rwd(md) {
    header {
        #menu {
            width: V.$Num10 * 1.3%;
            // background-color: rgb(140, 0, 255);
        }

        h1 {
            width: V.$Num10 * 8.7%;
        }

        ul {
            width: V.$Num10 * 10%;
        }
    }
}

@include R.Rwd(lg) {
    // @include R.FloatBox();

    @include R.FlexBox();
    #bivouac {
        color: white;
    }
    header {
        // 透明效果 - 去掉背景色
        background-color: transparent;
        .ConnBox {
            width: V.$Num10 * 10%;
            position: absolute;
            bottom: 50px;
            display: block;

            li{
                width: V.$Num10 * 8.5%;
            }
        }
    }

    main {
        
    }

    footer {
        background-color: transparent;
        .ConnBox {
            display: none;
        }
        li {
            text-align: center;
        }
    }

}