1. 設計內頁時，要先判斷共用部份（首頁）

2. 設計多頁網頁，建立範本較好管理
    2-1 Dreamweaver
    2-2 Javascript
    2-3 Vue
    2-4 PHP（資料庫語言）

3. 共用框架，需設定不同的 class 名稱，樣式表內容才不會有衝突
    3-1 因為 css 是由上往下讀取
    3-2 不同 html 檔案，讀取同一個 css 檔時，若沒有不同名稱管理，會基於第 1 點的特性，造成後面樣式直接覆蓋前面樣式

表格  <table></table>
列 <tr></tr>
欄 <td></td>
合併儲存格
垂直合併（同一欄位，不同一列） rowspan
水平合併（同一列，不同欄位）   colspan

scss 繼承（集中管理相同的樣式）
1. 可以不用命名 class or id
缺點
1. 無法跨檔案應用
2. 名稱不能相同

表單 form （web 資料庫伺服器）
1. 資料的字元編碼 accept-charset
2. 處理程式的網址 action
3. 資料傳回 web 伺服器的方法
    3-1 get 資料會附加在網址後面進行傳送，適合用來傳送少量、不要求安全的資料，例如搜尋關鍵字
    3-2 post 資料會透過 HTTP 標頭進行傳送，適合用來傳送大量或要求安全的資料，例如上傳檔案、密碼
4. 表單名稱 name
5. 處理結果的顯示方式 target
6. 資料傳回 web 伺服器所使用的編碼方式
    6-1 預設值 application/x-www-form-urlencoded
    6-2 上傳檔案 multipart/form-data
    6-3 資料傳送到E-mail text/plain 

表單使用的標籤
1. 標籤文字 label （行內格式）
    1-1 for 針對 id 屬性；表單欄位設定標籤文字
2. 表單輸入元素 input
    size 將輸入元素的寬度設定為 30 個字元（寫在標籤之內，目前不會使用）
    maxlength 最多字元
    minlength 最少字元
    required 必填
    value 初始值（預設填入的資料，需手動刪除）
    placeholder 提示文字（會顯示在輸入框中，但輸入資料時會自動刪除）
    readonly 不允許使用者變更位資料
    name 每個輸入欄位都要有名稱，資料庫欄位名稱（英文開頭、數字；不能用特殊符號與中文）
    type
    2-1 單行文字方塊 text
    2-2 電話 tel
    2-3 日期時間欄位
        2-3-1 輸入西元日期 date
        2-3-1 輸入 12 小時制時間 time
        2-3-3 西元日期與 12 小時制時間 datetime-local
        2-3-4 西元月份 month
        2-3-5 一年的第幾週 week
    2-4 按鈕
        2-4-1 提交，將表單資料傳回 web 伺服器 submit
        2-4-2 重設，清除表單資料，恢復到起始狀態 reset
        2-4-3 一般按鈕，代表通用的按鈕，經常用來處理事件，執行瀏覽器端 Script buttom
        2-4-4 圖片提交按鈕，它的作用與提交（submit）相同，只是外觀為圖片 image

3. 驗證
    3-1 HTML5 表單內設簡易驗證
    3-2 正則表達式

4. 表單設計 CSS 樣式
    4-1 可以直接呼叫 input 標籤
    4-2 指定標籤樣式呼叫 inptu[type="name"]

Scss 入門
1. 變數
2. 巢狀
3. 繼承
4. 混用 

傳統 css 的兩大問題
1. 可以設定變數（全域），全域變數或全域樣式會互相干擾，不易進行 debug，可維護性差
2. 重複撰寫相同樣式，程式碼不易閱讀

預處理器主流有三種，經系統編輯才能被「瀏覽器」讀取
1. Sass / Scss （Css 預處理器），最多人使用
2. Less 基於 Ruby 開發，後來改用 Node.js 為基底實作
3. Stylus 基於 Node.js

舊版 Sass 
1.縮排語法，副檔名 Sass
2.使用縮排方式編輯巢狀關係
.nav
    background-color: #000
    li
        display: flex

新版 Scss
1. 區塊語法，副檔 scss
2. 使用「大括號區分選擇器」、「分號區分屬性」，較貼近原生 css
.nav {
    background-color: #123456;
    li {
        display: flex;
    }
}

Sass / Scss 提供的主要功能如下：
1. 參數與結構化 css 
    1-1 結構化：巢狀語法
    1-2 參數：變數設定
2. 模組化 css
    2-1 Import 引入檔案，用來分別進行管理
    2-2 Extend 繼承，處理共同樣式，無法跨檔案
    2-3 Mixin 混入（混用），打包常用功能，替換局部變數
    2-4 Functions 函式（進階）
3. 自動化 css
    3-1 條件判斷 @if @else； @if @else if @else
    3-2 迴圈 @each 搭配 array；@each 搭配 map、for 迴圈（進階）

1. 變數
    以錢字號 $ 來宣告變數，通常會在程式碼最上方（全域變數），只要有引用該變數的地方，均可統一修改管理。
    區域變數，指某個區塊專用的
    可用於：顏色、寬高、字體大小等等
2. 巢狀
    用來提升 css 的維護性；可以少設定「類別 class」名稱
3. 繼承
    當許多選擇器具有相同樣式時（指的是同一檔案），可透過 % 佔位符號宣告，將所有相同樣式內容合併，在以 @extend 來引入使用
    *無法跨檔案應用；無法置入 media 判斷
4. 混用 
    將經常被重複使用的程式碼獨立撰寫，以 @mixin 語法包裝起來，需要時透過 @include 引用；若設有參數，即可根據不同參數來設定相似的樣式

比較： @mixin 和 @extend 使用時機
1. 使用 @mixin 的好處，是減少重複撰寫樣式的時間
2. 使用 @mixin 的壞處，造成編譯後的 css 樣式大量重複，使檔案異常肥大
3. 改用類似效果 @extend ，解決重複樣式，將目標對象進行合併而非載入
可以從下列兩點來思考
1. 是否需要傳遞參數
2. 是否需要考慮編譯後 css 大小

模組 Modules
透過 @import 或 @use 語法，可將 SCSS 以模組化的形式，從其他 SCSS 檔案引入需要的樣式
*需注意目前 SCSS 即有的模組型態，不是全部支援 @use

@import 與 @use 的差別
1. @import 會全部導入樣式，有可能產生「命名」衝突的狀況
2. @use 代表「參照」，只選擇需要的部候使用，並戴上模組名稱來呼叫，降低衝突的可能性
